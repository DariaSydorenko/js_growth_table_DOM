{"mappings":"ACEA,IAAM,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAE5C,EAAQ,SAAS,aAAa,CAAC,SAOrC,SAAS,IACP,IAAM,EAAY,EAAM,IAAI,CAAC,MAAM,CAC7B,EAAY,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAE5C,CAAA,EAAgB,QAAQ,CAAG,GATN,GAUrB,EAAgB,QAAQ,CAAG,GARN,EASrB,EAAmB,QAAQ,CAAG,GAVN,GAWxB,EAAmB,QAAQ,CAAG,GATN,CAU1B,CAEA,EAAgB,gBAAgB,CAAC,QAAS,WAIxC,IAAK,IAHC,EAAS,EAAM,SAAS,GACxB,EAAY,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAEnC,EAAI,EAAG,EAAI,EAAW,IAC7B,EAAO,UAAU,GAGnB,GACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,EAAM,SAAS,CAAC,IAEhB,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WACtC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WACtC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar appendRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar appendColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\"table\");\nvar MAX_ROWS_COUNT = 10;\nvar MAX_COLUMNS_COUNT = 10;\nvar MIN_ROWS_COUNT = 2;\nvar MIN_COLUMNS_COUNT = 2;\nfunction updateButtonState() {\n    var rowsCount = table.rows.length;\n    var colsCount = table.rows[0].cells.length;\n    appendRowButton.disabled = rowsCount >= MAX_ROWS_COUNT;\n    removeRowButton.disabled = rowsCount <= MIN_ROWS_COUNT;\n    appendColumnButton.disabled = colsCount >= MAX_COLUMNS_COUNT;\n    removeColumnButton.disabled = colsCount <= MIN_COLUMNS_COUNT;\n}\nappendRowButton.addEventListener(\"click\", function() {\n    var newRow = table.insertRow();\n    var colsCount = table.rows[0].cells.length;\n    for(var i = 0; i < colsCount; i++)newRow.insertCell();\n    updateButtonState();\n});\nremoveRowButton.addEventListener(\"click\", function() {\n    table.deleteRow(-1);\n    updateButtonState();\n});\nappendColumnButton.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.insertCell();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    updateButtonState();\n});\nremoveColumnButton.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    updateButtonState();\n});\n\n//# sourceMappingURL=index.777abec0.js.map\n","'use strict';\n\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\nconst table = document.querySelector('table');\n\nconst MAX_ROWS_COUNT = 10;\nconst MAX_COLUMNS_COUNT = 10;\nconst MIN_ROWS_COUNT = 2;\nconst MIN_COLUMNS_COUNT = 2;\n\nfunction updateButtonState() {\n  const rowsCount = table.rows.length;\n  const colsCount = table.rows[0].cells.length;\n\n  appendRowButton.disabled = rowsCount >= MAX_ROWS_COUNT;\n  removeRowButton.disabled = rowsCount <= MIN_ROWS_COUNT;\n  appendColumnButton.disabled = colsCount >= MAX_COLUMNS_COUNT;\n  removeColumnButton.disabled = colsCount <= MIN_COLUMNS_COUNT;\n}\n\nappendRowButton.addEventListener('click', () => {\n  const newRow = table.insertRow();\n  const colsCount = table.rows[0].cells.length;\n\n  for (let i = 0; i < colsCount; i++) {\n    newRow.insertCell();\n  }\n\n  updateButtonState();\n});\n\nremoveRowButton.addEventListener('click', () => {\n  table.deleteRow(-1);\n\n  updateButtonState();\n});\n\nappendColumnButton.addEventListener('click', () => {\n  for (const row of table.rows) {\n    row.insertCell();\n  }\n\n  updateButtonState();\n});\n\nremoveColumnButton.addEventListener('click', () => {\n  for (const row of table.rows) {\n    row.deleteCell(-1);\n  }\n\n  updateButtonState();\n});\n"],"names":["appendRowButton","document","querySelector","removeRowButton","appendColumnButton","removeColumnButton","table","updateButtonState","rowsCount","rows","length","colsCount","cells","disabled","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.777abec0.js.map"}